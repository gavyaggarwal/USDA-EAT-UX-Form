// Generated by CoffeeScript 1.7.1
var baseURL, bodyParser, cookieParser, error, express, fs, moment, pdfPass, pdfUser, schoolHandler, serveIndex, webIP, webPort, webServer;

bodyParser = require('body-parser');

cookieParser = require('cookie-parser');

express = require('express');

fs = require('fs');

moment = require('moment');

serveIndex = require('serve-index');

webPort = process.env.OPENSHIFT_NODEJS_PORT || 8080;

webIP = process.env.OPENSHIFT_NODEJS_IP || "192.168.0.100";

baseURL = 'http://' + webIP + ':' + webPort + '/';

pdfUser = 'USDA';

pdfPass = 'Demo';

webServer = express();

schoolHandler = function(req, res, next) {
  var b, c, index, path, _ref;
  c = req.cookies;
  if (!c || c.user !== pdfUser || c.pass !== pdfPass) {
    b = (_ref = req.query) != null ? _ref : req.body;
    if (b && b.user === pdfUser && b.pass === pdfPass) {
      res.cookie('user', b.user);
      res.cookie('pass', b.pass);
      res.redirect(307, baseURL + 'schools');
      return;
    } else {
      res.redirect(307, baseURL + 'login.html');
      return;
    }
  }
  if (req.url === '/') {
    index = serveIndex('./pdfs', {
      'icons': true
    });
    return index(req, res, res.send);
  } else {
    path = 'pdfs' + req.url;
    return fs.access(path, fs.F_OK, function(err) {
      var options;
      if (!err) {
        options = {
          root: process.cwd()
        };
        return res.sendFile(path, options);
      } else {
        return res.status(404).end();
      }
    });
  }
};

webServer.use(express["static"]('./public_html/'));

webServer.use(bodyParser.urlencoded({
  extended: true
}));

webServer.use('/schools', cookieParser(), schoolHandler);

webServer.post('/form-submit.json', function(req, res) {
  var contents, count, countStr, data, error, filename;
  contents = req.body;
  console.log('Received Form Submission');
  try {
    data = contents.data.replace(/^data:application\/pdf;base64,/, "");
    filename = moment().format('YYYYMMDD-hhmmss');
    count = 0;
    while (true) {
      countStr = count ? count.toString() : '';
      try {
        fs.accessSync('pdfs/' + filename + countStr + '.pdf', fs.F_OK);
        count += 1;
        continue;
      } catch (_error) {
        error = _error;
        filename = 'pdfs/' + filename + countStr + '.pdf';
        break;
      }
    }
    fs.writeFileSync(filename, data, 'base64');
    console.log("PDF Successfully Generated", filename);
  } catch (_error) {
    error = _error;
    console.log("Error Generating PDF: " + error);
  }
  res.setHeader('Content-Type', 'application/json');
  return res.json({
    success: true
  });
});

try {
  webServer.listen(webPort, webIP);
  console.log('Web Server Listening on port ' + webPort);
} catch (_error) {
  error = _error;
  console.log('Unable to Run Web Server: ' + error);
}
