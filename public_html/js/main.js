// Generated by CoffeeScript 1.7.1
var baseURL, child, childIncomeTemplate, currentPanel, data, generatePDF, objectForFields, panel, populateChildrenIncome, processChildrenInfo, processParentInfo, setUpButtons, setUpChildPanel, setUpDefinitions, setUpIncomePanel, setUpValidation, showData, showNextPanel, showPreviousPanel, submitForm, updateProgressBar;

baseURL = 'http://localhost:8080/';

panel = 0;

child = 1;

childIncomeTemplate = null;

data = {
  parent: null,
  children: null
};

currentPanel = function() {
  return $('main').children().eq(panel);
};

updateProgressBar = function() {
  var progress, progressStr;
  progress = (panel + 1) / ($('.panel').length + 1);
  progressStr = progress * 100 + '%';
  return $('#progressBar').animate({
    width: progressStr
  });
};

showPreviousPanel = function() {
  var currPanel, prevPanel;
  currPanel = currentPanel();
  panel--;
  prevPanel = currentPanel();
  $(prevPanel).css("display", "inline-block").animate({
    opacity: 1
  }, 1000);
  $('main').scrollLeft(720).animate({
    scrollLeft: 0
  }, 1000);
  $(currPanel).animate({
    opacity: 0
  }, 1000, "swing", function() {
    return $(this).css("display", "none");
  });
  return updateProgressBar();
};

showNextPanel = function() {
  var currPanel, nextPanel;
  currPanel = currentPanel();
  panel++;
  nextPanel = currentPanel();
  $(currPanel).animate({
    opacity: 0
  }, 1000, "swing", function() {
    return $(this).css("display", "none");
  });
  $('main').animate({
    scrollLeft: 720
  }, 1000, "swing", function() {
    $(this).scrollLeft(0);
    return $('body').animate({
      scrollTop: 0
    });
  });
  $(nextPanel).css("display", "inline-block").animate({
    opacity: 1
  }, 1000);
  return updateProgressBar();
};

objectForFields = function(arr) {
  var field, obj, val, _i, _len;
  obj = {};
  for (_i = 0, _len = arr.length; _i < _len; _i++) {
    field = arr[_i];
    val = $('#' + field).val();
    if (val === null || val === "" || val === void 0) {
      obj[field] = null;
    } else {
      obj[field] = val;
    }
  }
  return obj;
};

processParentInfo = function() {
  $('#parent_info').find('form').submit();
  if ($('#parent_info').find('form').valid()) {
    data.parent = objectForFields(['parentFirstName', 'parentLastName', 'email', 'phone', 'address', 'city', 'state', 'zipCode']);
    return showNextPanel();
  } else {
    return data.parent = null;
  }
};

processChildrenInfo = function() {
  var allValid, field, i, obj, res, val, _i, _j, _k, _len, _len1, _ref, _ref1;
  allValid = true;
  $('#children_info').find('form').each(function() {
    $(this).submit();
    if (!($(this).valid())) {
      return allValid = false;
    }
  });
  if (allValid) {
    res = [];
    for (i = _i = 1; 1 <= child ? _i < child : _i > child; i = 1 <= child ? ++_i : --_i) {
      if (document.getElementById('child' + i + 'Form')) {
        obj = {};
        _ref = ['FirstName', 'MiddleName', 'LastName'];
        for (_j = 0, _len = _ref.length; _j < _len; _j++) {
          field = _ref[_j];
          val = $('#child' + i + field).val();
          if (val === null || val === "" || val === void 0) {
            obj[field] = null;
          } else {
            obj[field] = val;
          }
        }
        _ref1 = ['student', 'foster', 'homeless', 'migrant', 'runaway'];
        for (_k = 0, _len1 = _ref1.length; _k < _len1; _k++) {
          field = _ref1[_k];
          obj[field] = document.getElementById('child' + i + field).checked;
        }
        res.push(obj);
      }
    }
    data.children = res;
    populateChildrenIncome(res);
    return showNextPanel();
  } else {
    return data.children = null;
  }
};

showData = function() {
  return console.log(data);
};

generatePDF = function() {
  return [
    {
      text: 'Sample PDF',
      style: 'header'
    }, {
      text: data.parent.parentFirstName + ' ' + data.parent.parentLastName,
      style: 'subheader'
    }, {
      text: 'This PDF has been generated dynamically.',
      style: 'normal'
    }
  ];
};

submitForm = function() {
  return $.ajax({
    url: baseURL + 'form-submit.json',
    method: 'POST',
    contentType: 'application/json;charset=UTF-8',
    data: JSON.stringify(generatePDF()),
    dataType: 'json'
  }).done(function(data) {
    return console.log(data);
  }).error(function(xhr, error) {
    return console.log('Error Occurred: ' + error);
  });
};

setUpButtons = function() {
  $('#GetStartButton').click(function() {
    return showNextPanel();
  });
  $('.backButton').click(function() {
    return showPreviousPanel();
  });
  $('.nextButton').click(function() {
    return showNextPanel();
  });
  $('#parentInfoButton').click(function() {
    return processParentInfo();
  });
  return $('#childrenInfoButton').click(function() {
    return processChildrenInfo();
  });
};

setUpDefinitions = function(parent) {
  parent = parent || 'body';
  $(parent).find('.has-definition').on('focusin mouseenter', function() {
    $('#status-card span').html($(this).attr("data-definition"));
    return $('#status-card').css('display', 'block').animate({
      opacity: 1
    });
  });
  return $(parent).find('.has-definition').on('focusout mouseleave', function() {
    return $('#status-card').animate({
      opacity: 0
    }, 400, "swing", function() {
      return $(this).css('display', 'none');
    });
  });
};

setUpValidation = function(parent) {
  $.validator.addMethod('phoneUS', (function(phone_number, element) {
    phone_number = phone_number.replace(/\s+/g, '');
    return this.optional(element) || phone_number.length > 9 && phone_number.match(/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/);
  }), 'Please enter a valid phone number.');
  $.validator.setDefaults({
    debug: true,
    errorClass: 'invalid',
    validClass: 'valid',
    errorPlacement: function(error, element) {},
    submitHandler: function(form) {},
    rules: {
      parentFirstName: 'required',
      parentLastName: 'required',
      email: 'email',
      phone: 'phoneUS',
      zipCode: 'digits'
    }
  });
  return $('form').each(function() {
    return $(this).validate({});
  });
};

setUpChildPanel = function() {
  var addChild, template, templateHTML;
  template = $('#child-num-Form');
  templateHTML = $(template)[0].outerHTML;
  $(template).remove();
  addChild = function() {
    var newElement, newHTML;
    newHTML = templateHTML.replace(/-num-/g, child.toString());
    newElement = $.parseHTML(newHTML);
    setUpDefinitions(newElement);
    $(newElement).validate({});
    $('#addChildSection').before(newElement);
    $('#child' + child + 'FirstName').on('change keyup input', function() {
      var val;
      val = $(this).val();
      if (val) {
        return $(this).closest('form').find('h5').html($(this).val());
      } else {
        return $(this).closest('form').find('h5').html('New Child');
      }
    });
    child++;
    return $(newElement).find('.removeChild').click(function() {
      if ($('.childForm').size() === 1) {
        return Materialize.toast('You must have at least one child.', 4000);
      } else {
        return $(this).closest('form').remove();
      }
    });
  };
  $('#addChild').click(function() {
    return addChild();
  });
  return addChild();
};

setUpIncomePanel = function() {
  var childIncomeElement;
  childIncomeElement = $('#childIncomeTemplate');
  childIncomeTemplate = $(childIncomeElement)[0].outerHTML;
  $('#caseNumberSection').hide(0);
  $('#incomeInfoSection').hide(0);
  return $("input[name='programParticipation']").change(function() {
    if ($(this).val() === 'true') {
      $('#caseNumberSection').show();
      return $('#incomeInfoSection').hide();
    } else {
      $('#caseNumberSection').hide();
      return $('#incomeInfoSection').show();
    }
  });
};

populateChildrenIncome = function(children) {
  var c, childIncomeSection, i, name, newForm, _i, _len, _results;
  childIncomeSection = $('#childIncomeSection');
  $(childIncomeSection).empty();
  _results = [];
  for (i = _i = 0, _len = children.length; _i < _len; i = ++_i) {
    c = children[i];
    name = c.FirstName + ' ' + c.LastName;
    newForm = $.parseHTML(childIncomeTemplate);
    $(childIncomeSection).append(newForm);
    $(newForm).attr('id', 'childIncomeForm' + i);
    $(newForm).find('#childIncomeNameTemplate').attr('id', 'childIncomeName' + i).html(name);
    $(newForm).find('#childIncomeFieldTemplate').attr('id', 'childIncomeField' + i);
    $(newForm).find('#childIncomeFrequencyTemplate').attr('id', 'childIncomeFrequency' + i).material_select();
    _results.push($(newForm).validate({}));
  }
  return _results;
};

$(function() {
  setUpButtons();
  setUpDefinitions();
  setUpValidation();
  setUpChildPanel();
  setUpIncomePanel();
  $('select').material_select();
  showNextPanel();
  showNextPanel();
  showNextPanel();
  return showNextPanel();
});
