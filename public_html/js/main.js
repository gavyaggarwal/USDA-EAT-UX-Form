// Generated by CoffeeScript 1.7.1
var adult, adultIncomeTemplate, baseURL, changeHouseHoldMembers, child, childIncomeTemplate, currentPanel, data, forwardPanelTransition, generatePDF, hasSSN, householdMembers, objectForFields, panel, panelStack, populateAdultIncome, populateChildrenIncome, processAdultInfo, processChildrenInfo, processEligibilityInfo, processIncomeInfo, processParentInfo, processProgramInfo, processSSNInfo, processSubmit, programParticipant, setUpButtons, setUpChildPanel, setUpDefinitions, setUpHouseholdPanel, setUpIncomePanel, setUpProgramPanel, setUpSSNPanel, setUpSubmitPanel, setUpValidation, showData, showNextPanel, showPreviousPanel, skipToSubmitPanel, submitForm, submitPanelIndex, updateProgressBar, _ref;

baseURL = ((_ref = location.origin) != null ? _ref : location.protocol + '//' + location.host) + '/';

panel = 0;

child = 1;

adult = 1;

householdMembers = 1;

panelStack = [];

programParticipant = false;

hasSSN = false;

childIncomeTemplate = null;

adultIncomeTemplate = null;

submitPanelIndex = null;

adultIncomeTemplate = null;

data = {
  eligibility: null,
  parent: null,
  children: null,
  program: null,
  adults: null,
  earner: null,
  signature: null
};

currentPanel = function() {
  return $('main').children().eq(panel);
};

updateProgressBar = function() {
  var progress, progressStr;
  progress = panel / submitPanelIndex;
  progressStr = progress * 100 + '%';
  return $('#progressBar').animate({
    width: progressStr
  });
};

showPreviousPanel = function() {
  var currPanel, prevPanel;
  currPanel = currentPanel();
  panel = panelStack.pop();
  prevPanel = currentPanel();
  $(prevPanel).css("display", "inline-block").animate({
    opacity: 1
  }, 1000);
  $('main').scrollLeft(720).animate({
    scrollLeft: 0
  }, 1000);
  $(currPanel).animate({
    opacity: 0
  }, 1000, "swing", function() {
    return $(this).css("display", "none");
  });
  return updateProgressBar();
};

forwardPanelTransition = function(newPanel) {
  var currPanel, nextPanel;
  currPanel = currentPanel();
  panelStack.push(panel);
  panel = newPanel;
  nextPanel = currentPanel();
  $(currPanel).animate({
    opacity: 0
  }, 1000, "swing", function() {
    return $(this).css("display", "none");
  });
  $('main').animate({
    scrollLeft: 720
  }, 1000, "swing", function() {
    $(this).scrollLeft(0);
    return $('body').animate({
      scrollTop: 0
    });
  });
  $(nextPanel).css("display", "inline-block").animate({
    opacity: 1
  }, 1000);
  return updateProgressBar();
};

showNextPanel = function() {
  return forwardPanelTransition(panel + 1);
};

skipToSubmitPanel = function() {
  return forwardPanelTransition(submitPanelIndex);
};

objectForFields = function(arr) {
  var field, obj, val, _i, _len;
  obj = {};
  for (_i = 0, _len = arr.length; _i < _len; _i++) {
    field = arr[_i];
    val = $('#' + field).val();
    obj[field] = val != null ? val : null;
  }
  return obj;
};

processEligibilityInfo = function() {
  var form;
  form = $('#eligibility_info').find('form');
  $(form).submit();
  if ($(form).valid()) {
    data.eligibility = {
      type: $(form).find('input[name="eligibilityCategory"]:checked').val()
    };
    return showNextPanel();
  } else {
    return Materialize.toast('You must select an option.', 4000);
  }
};

processParentInfo = function() {
  $('#parent_info').find('form').submit();
  if ($('#parent_info').find('form').valid()) {
    data.parent = objectForFields(['parentFirstName', 'parentLastName', 'email', 'phone', 'address', 'city', 'state', 'zipCode']);
    return showNextPanel();
  } else {
    return data.parent = null;
  }
};

processProgramInfo = function() {
  $('#program_info').find('form').submit();
  if ($('#program_info').find('form').valid()) {
    if (programParticipant) {
      data.program = {
        participates: true,
        caseNumber: $('#caseNumber').val()
      };
    } else {
      data.program = {
        participates: false,
        caseNumber: null
      };
    }
    return showNextPanel();
  } else {
    return data.program = null;
  }
};

processChildrenInfo = function() {
  var allExempt, allValid, field, i, obj, res, val, _i, _j, _k, _len, _len1, _ref1, _ref2, _ref3;
  allValid = true;
  allExempt = true;
  $('#children_info').find('form').each(function() {
    $(this).submit();
    if (!($(this).valid())) {
      return allValid = false;
    }
  });
  if (allValid) {
    res = [];
    for (i = _i = 1; 1 <= child ? _i < child : _i > child; i = 1 <= child ? ++_i : --_i) {
      if (document.getElementById('child' + i + 'Form')) {
        obj = {};
        _ref1 = ['FirstName', 'MiddleName', 'LastName'];
        for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
          field = _ref1[_j];
          val = $('#child' + i + field).val();
          if (val === null || val === "" || val === void 0) {
            obj[field] = null;
          } else {
            obj[field] = val;
          }
        }
        _ref2 = ['student', 'foster', 'homeless', 'migrant', 'runaway', 'headStart'];
        for (_k = 0, _len1 = _ref2.length; _k < _len1; _k++) {
          field = _ref2[_k];
          obj[field] = document.getElementById('child' + i + field).checked;
        }
        if (obj.student && !obj.foster && !obj.homeless && !obj.migrant && !obj.runaway && !obj.headStart) {
          allExempt = false;
        }
        res.push(obj);
      }
    }
    data.children = res;
    populateChildrenIncome(res);
    if (allExempt || ((_ref3 = data.program) != null ? _ref3.participates : void 0)) {
      return skipToSubmitPanel();
    } else {
      return showNextPanel();
    }
  } else {
    return data.children = null;
  }
};

processAdultInfo = function() {
  var allValid, field, i, obj, res, val, _i, _j, _len, _ref1;
  allValid = true;
  $('#household_info').find('form').each(function() {
    $(this).submit();
    if (!($(this).valid())) {
      return allValid = false;
    }
  });
  if (allValid) {
    res = [];
    for (i = _i = 1; 1 <= adult ? _i < adult : _i > adult; i = 1 <= adult ? ++_i : --_i) {
      if (document.getElementById('adult' + i + 'Form')) {
        obj = {};
        _ref1 = ['FirstName', 'LastName'];
        for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
          field = _ref1[_j];
          val = $('#adult' + i + field).val();
          obj[field] = val != null ? val : null;
        }
        res.push(obj);
      }
    }
    data.adults = res;
    populateAdultIncome(res);
    return showNextPanel();
  } else {
    return data.adults = null;
  }
};

processIncomeInfo = function() {
  var allValid, form, i, income, method, _i, _j, _k, _len, _len1, _len2, _ref1, _ref2, _ref3;
  allValid = true;
  $('#income_info').find('form').each(function() {
    $(this).submit();
    if (!($(this).valid())) {
      return allValid = false;
    }
  });
  if (allValid) {
    _ref1 = $('#childIncomeSection').find('form');
    for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {
      form = _ref1[i];
      data.children[i].income = {
        amount: $(form).find('[name="childIncome"]').val(),
        frequency: $(form).find('[name="childIncomeFrequency"]').val()
      };
    }
    _ref2 = $('#adultIncomeSection').find('form');
    for (i = _j = 0, _len1 = _ref2.length; _j < _len1; i = ++_j) {
      form = _ref2[i];
      income = [];
      _ref3 = $(form).find('#adultIncomeType' + i).val();
      for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {
        method = _ref3[_k];
        if (method === 'job') {
          income.push({
            type: 'job',
            amount: $(form).find('[name="adultIncomeWage"]').val(),
            frequency: $(form).find('[name="adultIncomeWageFrequency"]').val()
          });
        } else if (method === 'external') {
          income.push({
            type: 'external',
            amount: $(form).find('[name="adultIncomeExternal"]').val(),
            frequency: $(form).find('[name="adultIncomeExternalFrequency"]').val()
          });
        } else if (method === 'other') {
          income.push({
            type: 'other',
            amount: $(form).find('[name="adultIncomeOther"]').val(),
            frequency: $(form).find('[name="adultIncomeOtherFrequency"]').val()
          });
        }
      }
      if (i === 0) {
        data.parent.income = income;
      } else {
        data.adults[i - 1].income = income;
      }
    }
    return showNextPanel();
  }
};

processSSNInfo = function() {
  var form, i, name;
  form = $('#ssn_info').find('form');
  $(form).submit();
  if ($(form).valid()) {
    if (hasSSN) {
      i = +$(form).find('select').val();
      if (i === 0) {
        name = data.parent.parentFirstName + ' ' + data.parent.parentLastName;
      } else {
        name = data.adults[i - 1].FirstName + ' ' + data.adults[i - 1].LastName;
      }
      data.earner = {
        name: name,
        ssn: $(form).find('#SSN').val()
      };
    } else {
      data.earner = null;
    }
    return showNextPanel();
  } else {
    return data.earner = null;
  }
};

processSubmit = function() {
  var form;
  form = $('#submit').find('form');
  $(form).submit();
  if ($(form).valid()) {
    $('#preSubmission').hide();
    $('#duringSubmission').show();
    data.signature = $(form).find('#signature').val();
    return submitForm();
  }
};

changeHouseHoldMembers = function(change) {
  console.log('change', change);
  if (change === 'add') {
    householdMembers++;
  } else if (change === 'remove') {
    householdMembers--;
  }
  return $('#householdSize').html(householdMembers);
};

showData = function() {
  return console.log(data);
};

generatePDF = function() {
  return [
    {
      text: 'Sample PDF',
      style: 'header'
    }, {
      text: data.parent.parentFirstName + ' ' + data.parent.parentLastName,
      style: 'subheader'
    }, {
      text: 'This PDF has been generated dynamically.',
      style: 'normal'
    }
  ];
};

submitForm = function() {
  return $.ajax({
    url: baseURL + 'form-submit.json',
    method: 'POST',
    contentType: 'application/json;charset=UTF-8',
    data: JSON.stringify(generatePDF()),
    dataType: 'json'
  }).done(function(data) {
    $('#duringSubmission').hide();
    return $('#postSubmission').show();
  }).error(function(xhr, error) {
    return console.log('Error Occurred: ' + error);
  });
};

setUpButtons = function() {
  $('#GetStartButton').click(showNextPanel);
  $('.backButton').click(showPreviousPanel);
  $('.nextButton').click(showNextPanel);
  $('#eligibilityInfoButton').click(processEligibilityInfo);
  $('#parentInfoButton').click(processParentInfo);
  $('#childrenInfoButton').click(processChildrenInfo);
  $('#programInfoButton').click(processProgramInfo);
  $('#adultInfoButton').click(processAdultInfo);
  $('#incomeInfoButton').click(processIncomeInfo);
  $('#ssnInfoButton').click(processSSNInfo);
  return $('#submitButton').click(processSubmit);
};

setUpDefinitions = function(parent) {
  parent = parent || 'body';
  $(parent).find('.has-definition').on('focusin mouseenter', function() {
    $('#status-card span').html($(this).attr("data-definition"));
    return $('#status-card').css('display', 'block').animate({
      opacity: 1
    });
  });
  return $(parent).find('.has-definition').on('focusout mouseleave', function() {
    return $('#status-card').animate({
      opacity: 0
    }, 400, "swing", function() {
      return $(this).css('display', 'none');
    });
  });
};

setUpValidation = function(parent) {
  $.validator.addMethod('phoneUS', (function(phone_number, element) {
    phone_number = phone_number.replace(/\s+/g, '');
    return this.optional(element) || phone_number.length > 9 && phone_number.match(/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/);
  }), 'Please enter a valid phone number.');
  $.validator.setDefaults({
    debug: false,
    errorClass: 'invalid',
    validClass: 'valid',
    errorPlacement: function(error, element) {},
    submitHandler: function(form) {},
    rules: {
      parentFirstName: 'required',
      parentLastName: 'required',
      email: 'email',
      phone: 'phoneUS',
      zipCode: 'digits',
      caseNumber: 'required',
      programParticipation: 'required',
      childIncome: 'digits',
      adultIncomeWage: 'digits',
      adultIncomeExternal: 'digits',
      adultIncomeOther: 'digits',
      ssn: 'digits',
      signature: 'required'
    }
  });
  return $('form').each(function() {
    return $(this).validate({});
  });
};

setUpProgramPanel = function() {
  var caseNumberHTML;
  caseNumberHTML = $('#caseNumberSection').html();
  $('#caseNumberSection').html('');
  return $("input[name='programParticipation']").change(function() {
    if ($(this).val() === 'true') {
      programParticipant = true;
      return $('#caseNumberSection').html(caseNumberHTML);
    } else {
      programParticipant = false;
      return $('#caseNumberSection').html('');
    }
  });
};

setUpChildPanel = function() {
  var addChild, template, templateHTML;
  template = $('#child-num-Form');
  templateHTML = $(template)[0].outerHTML;
  $(template).remove();
  addChild = function() {
    var newElement, newHTML;
    newHTML = templateHTML.replace(/-num-/g, child.toString());
    newElement = $.parseHTML(newHTML);
    setUpDefinitions(newElement);
    $(newElement).validate({});
    $('#addChildSection').before(newElement);
    $('#child' + child + 'FirstName').on('change keyup input', function() {
      var val;
      val = $(this).val();
      if (val) {
        return $(this).closest('form').find('h5').html($(this).val());
      } else {
        return $(this).closest('form').find('h5').html('New Child');
      }
    });
    child++;
    changeHouseHoldMembers('add');
    return $(newElement).find('.removeChild').click(function() {
      if ($('.childForm').size() === 1) {
        return Materialize.toast('You must have at least one child.', 4000);
      } else {
        $(this).closest('form').remove();
        return changeHouseHoldMembers('remove');
      }
    });
  };
  $('#addChild').click(function() {
    return addChild();
  });
  return addChild();
};

setUpHouseholdPanel = function() {
  var addAdult, template, templateHTML;
  template = $('#adult-num-Form');
  templateHTML = $(template)[0].outerHTML;
  $(template).remove();
  addAdult = function() {
    var newElement, newHTML;
    newHTML = templateHTML.replace(/-num-/g, adult.toString());
    newElement = $.parseHTML(newHTML);
    setUpDefinitions(newElement);
    $(newElement).validate({});
    $('#addAdultSection').before(newElement);
    adult++;
    changeHouseHoldMembers('add');
    return $(newElement).find('.removeAdult').click(function() {
      $(this).closest('form').remove();
      return changeHouseHoldMembers('remove');
    });
  };
  return $('#addAdult').click(function() {
    return addAdult();
  });
};

setUpIncomePanel = function() {
  var adultIncomeElement, childIncomeElement;
  childIncomeElement = $('#childIncomeTemplate');
  childIncomeTemplate = $(childIncomeElement)[0].outerHTML;
  $(childIncomeElement).remove();
  adultIncomeElement = $('#adultIncomeTemplate');
  adultIncomeTemplate = $(adultIncomeElement)[0].outerHTML;
  return $(adultIncomeElement).remove();
};

populateChildrenIncome = function(children) {
  var c, childIncomeSection, i, newForm, _i, _len, _results;
  childIncomeSection = $('#childIncomeSection');
  $(childIncomeSection).empty();
  _results = [];
  for (i = _i = 0, _len = children.length; _i < _len; i = ++_i) {
    c = children[i];
    newForm = $.parseHTML(childIncomeTemplate);
    $(childIncomeSection).append(newForm);
    setUpDefinitions(newForm);
    $(newForm).attr('id', 'childIncomeForm' + i);
    $(newForm).find('#childIncomeNameTemplate').attr('id', 'childIncomeName' + i).html(c.FirstName);
    $(newForm).find('#childIncomeFieldTemplate').attr('id', 'childIncomeField' + i);
    $(newForm).find('#childIncomeFrequencyTemplate').attr('id', 'childIncomeFrequency' + i).material_select();
    _results.push($(newForm).validate({}));
  }
  return _results;
};

populateAdultIncome = function(adults) {
  var a, adultIncomeBoxes, adultIncomeSection, allAdults, box, externalIncome, i, jobIncome, newForm, otherIncome, _i, _j, _len, _len1, _ref1, _results;
  adultIncomeSection = $('#adultIncomeSection');
  $(adultIncomeSection).empty();
  adultIncomeBoxes = new Array(adults.length + 1);
  allAdults = adults.slice(0);
  allAdults.unshift({
    FirstName: data.parent.parentFirstName
  });
  _results = [];
  for (i = _i = 0, _len = allAdults.length; _i < _len; i = ++_i) {
    a = allAdults[i];
    newForm = $.parseHTML(adultIncomeTemplate);
    $(adultIncomeSection).append(newForm);
    setUpDefinitions(newForm);
    $(newForm).attr('id', 'adultIncomeForm' + i);
    $(newForm).find('#adultIncomeNameTemplate').attr('id', 'adultIncomeName' + i).html(a.FirstName);
    $(newForm).find('#adultIncomeTypeTemplate').attr('id', 'adultIncomeType' + i).change(function() {
      var box, form, j, method, _j, _k, _len1, _len2, _ref1, _ref2, _results1;
      form = $(this).closest('form');
      j = $(form).index();
      $('#adultIncomeForm' + i + ' .select-wrapper');
      _ref1 = adultIncomeBoxes[j];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        box = _ref1[_j];
        $(box).find('select').material_select('destroy');
        $(box).remove();
      }
      _ref2 = $(this).val();
      _results1 = [];
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        method = _ref2[_k];
        if (method === 'job') {
          $(form).append(adultIncomeBoxes[j][0]);
          _results1.push($(adultIncomeBoxes[j][0]).find('select').material_select());
        } else if (method === 'external') {
          $(form).append(adultIncomeBoxes[j][1]);
          _results1.push($(adultIncomeBoxes[j][1]).find('select').material_select());
        } else if (method === 'other') {
          $(form).append(adultIncomeBoxes[j][2]);
          _results1.push($(adultIncomeBoxes[j][2]).find('select').material_select());
        } else {
          _results1.push(void 0);
        }
      }
      return _results1;
    }).material_select();
    jobIncome = $(newForm).find('#jobIncomeTemplate');
    $(jobIncome).attr('id', 'jobIncome' + i);
    externalIncome = $(newForm).find('#externalIncomeTemplate');
    $(externalIncome).attr('id', 'externalIncome' + i);
    otherIncome = $(newForm).find('#otherIncomeTemplate');
    $(otherIncome).attr('id', 'otherIncome' + i);
    adultIncomeBoxes[i] = [jobIncome, externalIncome, otherIncome];
    _ref1 = adultIncomeBoxes[i];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      box = _ref1[_j];
      $(box).find('select').material_select('destroy');
      $(box).remove();
    }
    _results.push($(newForm).validate({}));
  }
  return _results;
};

setUpSSNPanel = function() {
  var ssnDetails;
  ssnDetails = $('#ssnDetails');
  $('#ssnDetails').find('select').material_select('destroy');
  $(ssnDetails).remove();
  return $("input[name='socialSecurity']").change(function() {
    var a, i, select, _i, _len, _ref1;
    if ($(this).val() === 'true') {
      hasSSN = true;
      select = $(ssnDetails).find('select');
      $('#ssn_info form').append(ssnDetails);
      $(select).empty().append('<option value=0>' + data.parent.parentFirstName + '</option>');
      _ref1 = data.adults;
      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {
        a = _ref1[i];
        $(select).append('<option value=' + (i + 1) + '>' + a.FirstName + '</option>');
      }
      return $(select).material_select();
    } else {
      hasSSN = false;
      $(ssnDetails).find('select').material_select('destroy');
      return $(ssnDetails).remove();
    }
  });
};

(setUpSubmitPanel = function() {
  submitPanelIndex = $('.panel').length - 1;
  $('#postSubmission').hide();
  return $('#duringSubmission').hide();
})();

$(function() {
  setUpButtons();
  setUpDefinitions();
  setUpValidation();
  setUpChildPanel();
  setUpProgramPanel();
  setUpHouseholdPanel();
  setUpIncomePanel();
  setUpSSNPanel();
  setUpSubmitPanel();
  $('select').material_select();
  return $('.modal-trigger').leanModal();
});
